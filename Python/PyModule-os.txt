========================================== os.walk =================================================

Syntax : os.walk(top, topdown=True, onerror=None, followlinks=False)

----------------------------------------------------------------------------------------------------
Explaination:The method walk() generates the file names in a directory tree by walking the tree
             either top-down or bottom-up.
             
----------------------------------------------------------------------------------------------------
Examples: 

pskumarbehl@ubuntu:~/sun-mframe-parse$ pwd
/home/pskumarbehl/sun-mframe-parse

pskumarbehl@ubuntu:~/sun-mframe-parse$ ls -ltr
total 1932
-rw-r--r-- 1 pskumarbehl pskumarbehl 1239927 May 13 02:32 IBD.txt
-rwxr-xr-x 1 pskumarbehl pskumarbehl     551 May 13 02:43 parse-mainframe.py
-rwxr-xr-x 1 pskumarbehl pskumarbehl    4901 Jun 16 00:30 mframe_to_csv_parser.py
-rwxr-xr-x 1 pskumarbehl pskumarbehl    5477 Jun 17 02:04 mframe_to_csv_parser_new.py
-rw-r--r-- 1 pskumarbehl pskumarbehl  704734 Jun 17 02:04 sun4.txt
drwxr-xr-x 2 pskumarbehl pskumarbehl    4096 Sep 23 14:55 sun1
drwxr-xr-x 2 pskumarbehl pskumarbehl    4096 Sep 23 14:55 sun2

>>> for root in os.walk('/home/pskumarbehl/sun-mframe-parse'):
...     print(root)
... 
('/home/pskumarbehl/sun-mframe-parse', ['sun1', 'sun2'], ['mframe_to_csv_parser.py', 'mframe_to_csv_parser_new.py', 'parse-mainframe.py', '.mframe_to_csv_parser_new.py.swp', 'IBD.txt', 'sun4.txt'])
('/home/pskumarbehl/sun-mframe-parse/sun1', [], [])
('/home/pskumarbehl/sun-mframe-parse/sun2', [], [])

--------------------------------------------------------------------------------------------------------
#!/usr/bin/python
# -*- coding: utf-8 -*-
for (root, dirs, files) in os.walk('/home/pskumarbehl/sun-mframe-parse',
                                   topdown=True):
    for name in files:
        print os.path.join(root, name)
    for name in dirs:
        print os.path.join(root, name)
        
/usr/bin/python3.5 /home/pskumarbehl/PycharmProjects/sun1/test.py
/home/pskumarbehl/sun-mframe-parse/mframe_to_csv_parser.py
/home/pskumarbehl/sun-mframe-parse/mframe_to_csv_parser_new.py
/home/pskumarbehl/sun-mframe-parse/parse-mainframe.py
/home/pskumarbehl/sun-mframe-parse/.mframe_to_csv_parser_new.py.swp
/home/pskumarbehl/sun-mframe-parse/IBD.txt
/home/pskumarbehl/sun-mframe-parse/sun4.txt
/home/pskumarbehl/sun-mframe-parse/sun1
/home/pskumarbehl/sun-mframe-parse/sun2
/home/pskumarbehl/sun-mframe-parse/sun1/hi.txt
/home/pskumarbehl/sun-mframe-parse/sun2/sun3
/home/pskumarbehl/sun-mframe-parse/sun2/sun3/bye.txt
 
        
--------------------------------------------------------------------------------------------------------
 
 #!/usr/bin/python
# -*- coding: utf-8 -*-
for (root, dirs, files) in os.walk('/home/pskumarbehl/sun-mframe-parse',
                                   topdown=False):
    for name in files:
        print os.path.join(root, name)
    for name in dirs:
        print os.path.join(root, name)
        
/usr/bin/python3.5 /home/pskumarbehl/PycharmProjects/sun1/test.py
/home/pskumarbehl/sun-mframe-parse/sun1/hi.txt
/home/pskumarbehl/sun-mframe-parse/sun2/sun3/bye.txt
/home/pskumarbehl/sun-mframe-parse/sun2/sun3
/home/pskumarbehl/sun-mframe-parse/mframe_to_csv_parser.py
/home/pskumarbehl/sun-mframe-parse/mframe_to_csv_parser_new.py
/home/pskumarbehl/sun-mframe-parse/parse-mainframe.py
/home/pskumarbehl/sun-mframe-parse/.mframe_to_csv_parser_new.py.swp
/home/pskumarbehl/sun-mframe-parse/IBD.txt
/home/pskumarbehl/sun-mframe-parse/sun4.txt
/home/pskumarbehl/sun-mframe-parse/sun1
/home/pskumarbehl/sun-mframe-parse/sun2


============================== OS defined exit codes======================================

Syntax: 

os.EX_OK   = Exit code that means no error occurred(Availability: Unix).
os.EX_USAGE = Exit code that means the command was used incorrectly, such as when the wrong number of arguments are given(Unix).
os.EX_DATAERR = Exit code that means the input data was incorrect(Unix).
os.EX_NOINPUT = Exit code that means an input file did not exist or was not readable(Unix).
os.EX_NOUSER = Exit code that means a specified user did not exist(Unix).
os.EX_NOHOST = Exit code that means a specified host did not exist(Unix).
os.EX_UNAVAILABLE = Exit code that means that a required service is unavailable(Unix).
os.EX_SOFTWARE = Exit code that means an internal software error was detected(Unix).
os.EX_OSERR = Exit code that means an operating system error was detected, such as the inability to fork or create a pipe(Unix).
os.EX_OSFILE = Exit code that means some system file did not exist, could not be opened, or had some other kind of error(Unix).
os.EX_CANTCREAT = Exit code that means a user specified output file could not be created(Unix).
os.EX_IOERR = Exit code that means that an error occurred while doing I/O on some file(Unix).
os.EX_TEMPFAIL = Exit code that means a temporary failure occurred. This indicates something 
                 that may not really be an error, such as a network connection that couldn’t be made during a retryable operation(Unix).
os.EX_PROTOCOL = Exit code that means that a protocol exchange was illegal, invalid, or not understood(Unix).
os.EX_NOPERM = Exit code that means that there were insufficient permissions to perform 
               the operation (but not intended for file system problems)(Unix).
os.EX_CONFIG = Exit code that means that some kind of configuration error occurred(Unix).
os.EX_NOTFOUND = Exit code that means something like “an entry was not found”.


------------------------------------------------------------------------------------------

Explaination: These exit codes are defined and can be used with _exit(), although 
              they are not required. These are typically used for system programs written 
              in Python, such as a mail server’s external command delivery program.
              
------------------------------------------------------------------------------------------

Examples:

sys.exit(os.EX_NOINPUT)
sys.exit(os.EX_DATAERR)
sys.exit(os.EX_USAGE)
sys.exit(os.EX_NOINPUT)

    if options.test_sequence == "system":
        # Run the system tests
        print "Run the System Test Sequence..."
        run_test_sequence(SystemTestSequenceFunctions, options.verbosity)
        sys.exit(os.EX_OK)


========================================== os.fsencode =====================================

Syntax: os.fsencode(filename)

--------------------------------------------------------------------------------------------

Explaination : Encode path-like filename to the filesystem encoding with 'surrogateescape' 
               error handler, or 'strict' on Windows; return bytes unchanged.


--------------------------------------------------------------------------------------------

Examples: 

>>> ld = ['\udc80']
>>> [fn.encode(sys.getfilesystemencoding()) for fn in ld]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 1, in <listcomp>
UnicodeEncodeError: 'utf-8' codec can't encode character '\udc80' in position 0: surrogates not allowed


>>> [fn.encode(sys.getfilesystemencoding(), 'surrogateescape') for fn in ld]
[b'\x80']
>>> [os.fsencode(fn) for fn in ld]
[b'\x80']


=================================== os.fsdecode =============================================

Syntax: os.fsdecode(filename)

---------------------------------------------------------------------------------------------

Explaination : Decode the path-like filename from the filesystem encoding with 'surrogateescape' 
               error handler, or 'strict' on Windows; return str unchanged.
               
---------------------------------------------------------------------------------------------

Examples:  coming soon.......



================================= os.replace ================================================

Syntax: os.replace(src, dst, *, src_dir_fd=None, dst_dir_fd=None)

---------------------------------------------------------------------------------------------
Explaination: Rename the file or directory src to dst. If dst is a directory, OSError will be 
              raised. If dst exists and is a file, it will be replaced silently if the user 
              has permission. The operation may fail if src and dst are on different filesystems. 
              If successful, the renaming will be an atomic operation (this is a POSIX requirement).
              
---------------------------------------------------------------------------------------------

Examples: 

pskumarbehl@ubuntu:~/test$ pwd
/home/pskumarbehl/test

pskumarbehl@ubuntu:~/test$ ls -ltr
total 0
-rw-r--r-- 1 pskumarbehl pskumarbehl 0 Sep 23 17:42 sunil kumar behl

>>> os.replace('/home/pskumarbehl/test/sunil kumar behl', '/home/pskumarbehl/test/sunil_kumar_behl')

pskumarbehl@ubuntu:~/test$ ls -ltr
total 0
-rw-r--r-- 1 pskumarbehl pskumarbehl 0 Sep 23 17:42 sunil_kumar_behl

------------------------------------------------------

>>> import os
>>> path  = os.getcwd()
>>> filenames = os.listdir(path)
>>> for filename in filenames:
...     os.rename(os.path.join(path, filename), os.path.join(path, filename.replace(' ', '-')))
...

======================================= os.remove ================================================

Syntax : os.remove(path, *, dir_fd=None)

--------------------------------------------------------------------------------------------------

Explaination: 

--------------------------------------------------------------------------------------------------

Examples: 

pskumarbehl@ubuntu:~/test$ ls -ltr
total 0
-rw-r--r-- 1 pskumarbehl pskumarbehl 0 Sep 23 17:42 sunil_kumar_behl

>>> if os.path.isfile('/home/pskumarbehl/test/sunil_kumar_behl') or os.path.islink('/home/pskumarbehl/test/sunil_kumar_behl'):
...    os.remove('/home/pskumarbehl/test/sunil_kumar_behl')
...
>>>

pskumarbehl@ubuntu:~/test$ ls -ltr
total 0


==================================== os.mkdir ===================================================

Syntax: os.mkdir(path, mode=0o777, *, dir_fd=None)

-------------------------------------------------------------------------------------------------

Explaination: reate a directory named path with numeric mode mode. If the directory already exists, 
              FileExistsError is raised.
              
-------------------------------------------------------------------------------------------------

Examples:

pskumarbehl@ubuntu:~/test$ ls -ltr
total 0

>>> os.makedirs('/home/pskumarbehl/test/test1')

pskumarbehl@ubuntu:~/test$ ls -ltr
total 4
drwxr-xr-x 2 pskumarbehl pskumarbehl 4096 Sep 23 19:36 test1

>>> os.makedirs('/home/pskumarbehl/test/test2')

pskumarbehl@ubuntu:~/test$ ls -ltr
total 8
drwxr-xr-x 2 pskumarbehl pskumarbehl 4096 Sep 23 19:36 test1
drwxr-xr-x 2 pskumarbehl pskumarbehl 4096 Sep 23 19:36 test2


===================================== os.truncate , os.ftruncate =====================================

Syntax: 


==================================== os.listdir ======================================================

Syntax : os.listdir(path='.')

------------------------------------------------------------------------------------------------------

Explaination: 

------------------------------------------------------------------------------------------------------

Examples: 

>>> os.listdir('/home/pskumarbehl')
['.PyCharmCE2017.1', 'Pictures', 'examples.desktop', 'mykafka-latest', '.bashrc', '.ICEauthority', 'sun-mframe-parse', '.dmrc', '.xsession-errors', 'Desktop', 'DJANGO-STARTUP', 'Music', 'Templates', '.python_history', '.sqlite_history', '.compiz', 'Downloads', '.bash_history', '.ssh', '.local', '.sudo_as_admin_successful', '.virtualenvs', '.bash_logout', '.xsession-errors.old', '.mozilla', '.cache', '.viminfo', 'python-scripts', 'PycharmProjects', 'Videos', '.ipython', 'test', 'my-session.py', '.Xauthority', 'Public', 'mykafka', '.java', '.config', 'Documents', '.profile']

>>> for dir in os.listdir('/home/pskumarbehl'):
...     print(dir)
... 
.PyCharmCE2017.1
Pictures
examples.desktop
mykafka-latest
.bashrc
.ICEauthority
sun-mframe-parse
.dmrc
.xsession-errors
Desktop
DJANGO-STARTUP

====================================os.mkdir ================================================

Syntax: os.mkdir(path, mode=0o777, *, dir_fd=None)

---------------------------------------------------------------------------------------------

Explaination: 

---------------------------------------------------------------------------------------------

Examples: 

pskumarbehl@ubuntu:~/test$ ls
abc.txt  test1  test2

>>> os.mkdir('/home/pskumarbehl/test/suntech')

pskumarbehl@ubuntu:~/test$ ls
abc.txt  suntech  test1  test2

===================================== os.pathsep ===========================================

Syntax: os.pathsep

--------------------------------------------------------------------------------------------

Explaination: The character conventionally used by the operating system to separate search path components (as in PATH), such as ':' for               POSIX or ';' for Windows. Also available via os.path.

--------------------------------------------------------------------------------------------

Examples: 

>>> x=os.environ.get('PATH','').split(os.pathsep)
>>> print(x)
['/home/pskumarbehl/.local/share/umake/bin', '/usr/local/sbin', '/usr/local/bin', '/usr/sbin', '/usr/bin', '/sbin', '/bin', '/usr/games', '/usr/local/games', '/snap/bin']

====================================== Few More Seperators =================================

os.linesep     - The character conventionally used by the operating system to separate search path components (as in PATH), such as ':'                  for POSIX or ';' for Windows. Also available via os.path.

os.extsep      - The character which separates the base filename from the extension; for example, the '.' in os.py. Also available via                    os.path.

os.sep         - The character used by the operating system to separate pathname components. This is '/' for POSIX and '\\' for Windows.                  Note that knowing this is not sufficient to be able to parse or concatenate pathnames — use os.path.split() and                          os.path.join() — but it is occasionally useful. Also available via os.path.

Examples:

>>> os.linesep
'\n'
>>> os.extsep
'.'
>>> os.sep
'/'

======================================== os.devnull =========================================

Syntax: os.devnull

---------------------------------------------------------------------------------------------

Explaination: The file path of the null device. For example: '/dev/null' for POSIX, 'nul' for 
              Windows. Also available via os.path.

---------------------------------------------------------------------------------------------

Examples:

import os
import sys
f = open(os.devnull, 'w')
sys.sterr = f

