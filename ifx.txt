create table resourcegroup (
    resourcegroupid INT not null,
    profileid INT not null,
    resourcegroupname NVARCHAR(50),
    active boolean not null,
    dateinactive DATETIME YEAR TO FRACTION
);

create table resourceskillmapping (
    resourceskillmapid INT not null,
    skillid INT not null,
    profileid INT not null,
    competencelevel SMALLINT not null,
    active boolean not null
);

create table skill (
    skillid INT not null,
    profileid INT not null,
    skillname NVARCHAR(50) not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO FRACTION
);

create table skillgroup (
    skillgroupid INT not null,
    skillid INT not null,
    profileid INT not null,
    competencelevel SMALLINT not null,
    active boolean not null,
    skillweight INT default 1 not null,
    skillorder INT default 1 not null
);

create table team (
    teamid INT not null,
    profileid INT not null,
    teamname NVARCHAR(50) not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO FRACTION
);

create table application (
    applicationid INT not null,
    applicationname NVARCHAR(50),
    profileid INT not null,
    wfscriptname NVARCHAR(50),
    active boolean not null,
    dateinactive DATETIME YEAR TO SECOND
);

create table agentroutingsetting (
    profileid INT not null,
    autowork SMALLINT not null,
    wrapuptime SMALLINT not null
);

create table enginestatus (
    enginestarttime DATETIME YEAR TO SECOND not null
);

create table historicalusers (
    userid NVARCHAR(50) not null,
    productid INT not null
);

create table productinfo (
    productid INT not null,
    productname NVARCHAR(50),
    version NVARCHAR(15),
    active boolean not null,
    timestamp DATETIME YEAR TO SECOND not null,
    reportingenabled boolean not null
);

create table profileidmapping (
    profilename NVARCHAR(50) not null,
    profileid INT not null
);

create table purgeconfig (
    id INT not null,
    hrdbsize INT not null,
    hrdbmaxsize INT not null,
    hrdbemail VARCHAR(255),
    hrdbdays INT not null,
    retaininterval INT not null,
    scheduledtime VARCHAR(5)
);

create table dbinfo (
    version NVARCHAR(255),
    serverguid NVARCHAR(50),
    servertype SMALLINT
);

create table supervisor (
    recordid INT not null,
    resourceloginid NVARCHAR(50) not null,
    managedteamid INT not null,
    profileid INT not null,
    supervisortype SMALLINT not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO SECOND
);

create table teamcsqmapping (
    recordid INT not null,
    csqid INT not null,
    teamid INT not null,
    profileid INT not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO SECOND
);

create table currentactiveprofile (
    profilename NVARCHAR(50),
    profileid INT
);

create table rmoncsqconfig (
    rmonid INT not null,
    contactservicequeueid INT not null,
    profileid INT not null
);

create table rmonresconfig (
    rmonid INT not null,
    resourceloginid NVARCHAR(50) not null,
    profileid INT not null
);

create table rmonuser (
    rmonid INT not null,
    loginid NVARCHAR(50) not null,
    name NVARCHAR(50) not null,
    profileid INT not null,
    type INT not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO SECOND
);

create table crsapplication (
    recordid INT not null,
    profileid INT not null,
    applicationid INT not null,
    configclass lvarchar(512) not null,
    version INT not null,
    configimplclass lvarchar(512) not null,
    applicationname NVARCHAR(50) not null,
    applicationtype NVARCHAR(128) not null,
    applicationenabled boolean not null,
    numofsessions INT not null,
    description NVARCHAR(128),
    privatedata blob,
    createdatetime DATETIME YEAR TO SECOND default CURRENT YEAR TO SECOND not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO SECOND
);

create table crstrigger (
    recordid INT not null,
    profileid INT not null,
    configclass lvarchar(512) not null,
    version INT not null,
    configimplclass lvarchar(512) not null,
    triggername NVARCHAR(50) not null,
    triggertype NVARCHAR(128) not null,
    applicationname NVARCHAR(50) not null,
    triggerenabled boolean not null,
    numofsessions INT not null,
    idletimeout INT not null,
    triggerlocale NVARCHAR(50) not null,
    description NVARCHAR(128),
    misc1 lvarchar(256),
    misc2 lvarchar(256),
    privatedata blob,
    createdatetime DATETIME YEAR TO SECOND default CURRENT YEAR TO SECOND not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO SECOND
);

create table crsgroup (
    recordid INT not null,
    profileid INT not null,
    configclass lvarchar(512) not null,
    version INT not null,
    configimplclass lvarchar(512) not null,
    groupclass lvarchar(400) not null,
    groupid INT not null,
    grouptype NVARCHAR(128) not null,
    groupenabled boolean not null,
    numofchannels INT not null,
    description NVARCHAR(128),
    privatedata blob,
    createdatetime DATETIME YEAR TO SECOND default CURRENT YEAR TO SECOND not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO SECOND
);

create table systemconfig (
    recordid INT not null,
    profileid INT not null,
    classname lvarchar(512) not null,
    version INT not null,
    implclassname lvarchar(512) not null,
    privatedata blob,
    description NVARCHAR(128),
    createdatetime DATETIME YEAR TO SECOND default CURRENT YEAR TO SECOND not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO SECOND
);

create table systemconfigcolumn (
    recordid INT not null,
    columnindex INT not null,
    columncontent lvarchar(4000) not null
);

create table configschema (
    configclassid INT not null,
    classname lvarchar(512) not null,
    version INT not null,
    privatedatatype INT not null
);

create table configschemacolumn (
    configclassid INT not null,
    columnindex INT not null,
    columnname NVARCHAR(128) not null,
    columntype lvarchar(512) not null,
    keysequence INT not null
);

create table configseed (
    tablename lvarchar(512) not null,
    id INT default 0 not null
);

create table workflowtask (
    taskid DECIMAL(18,0) not null,
    parenttaskid DECIMAL(18,0),
    startdatetime DATETIME YEAR TO SECOND,
    enddatetime DATETIME YEAR TO SECOND,
    applicationserverid SMALLINT not null
);

create table debugflag (
    flag boolean
);

create table sqllogging (
    eventtime DATETIME YEAR TO SECOND,
    message VARCHAR(254)
);

create table rtcsqssummary (
    csqname NVARCHAR(50),
    loggedinagents INT,
    availableagents INT,
    unavailableagents INT,
    totalcalls INT,
    oldestcontact INT,
    callshandled INT,
    callsabandoned INT,
    callsdequeued INT,
    avgtalkduration INT,
    avgwaitduration INT,
    longesttalkduration INT,
    longestwaitduration INT,
    callswaiting INT,
    enddatetime DATETIME YEAR TO SECOND,
    workingagents INT,
    talkingagents INT,
    reservedagents INT,
    startdatetime DATETIME YEAR TO SECOND,
    convavgtalkduration VARCHAR(25),
    convavgwaitduration VARCHAR(25),
    convlongesttalkduration VARCHAR(25),
    convlongestwaitduration VARCHAR(25),
    convoldestcontact VARCHAR(25)
);

create table rticdstatistics (
    type NVARCHAR(50),
    totalcsqs INT,
    loggedinagents INT,
    workingagents INT,
    reservedagents INT,
    talkingagents INT,
    availableagents INT,
    unavailableagents INT,
    totalcalls INT,
    callswaiting INT,
    callshandled INT,
    callsabandoned INT,
    avgtalkduration INT,
    avgwaitduration INT,
    longesttalkduration INT,
    longestwaitduration INT,
    oldestcontact INT,
    startdatetime DATETIME YEAR TO SECOND,
    enddatetime DATETIME YEAR TO SECOND,
    convavgtalkduration VARCHAR(25),
    convavgwaitduration VARCHAR(25),
    convlongesttalkduration VARCHAR(25),
    convlongestwaitduration VARCHAR(25),
    convoldestcontact VARCHAR(25)
);

create table crsuser (
    resourceid INT,
    profileid INT,
    resourceloginid VARCHAR(254),
    resourcefirstname VARCHAR(254),
    resourcelastname VARCHAR(254),
    extension VARCHAR(254),
    capabilities INT,
    primaryextension VARCHAR(254),
    keypadmapping VARCHAR(254),
    resourcename VARCHAR(254),
    resourcegroupid INT,
    resourcetype INT,
    resourceskillmapid INT,
    assignedteamid INT,
    privatedata blob,
    createdatetime DATETIME YEAR TO SECOND,
    active boolean,
    dateinactive DATETIME YEAR TO SECOND
);

create table spokenname (
    recordid INT,
    profileid INT,
    resourceloginid NVARCHAR(50),
    payloadtype INT,
    privatedata blob,
    createdatetime DATETIME YEAR TO SECOND,
    active boolean,
    dateinactive DATETIME YEAR TO SECOND
);

create table campaign (
    recordid INT,
    campaignid INT,
    profileid INT,
    createdatetime DATETIME YEAR TO SECOND,
    campaignname NVARCHAR(50),
    enabled SMALLINT,
    description VARCHAR(50),
    starttime INT,
    endtime INT,
    cachesize INT,
    maxattempts INT,
    ansmachineretry SMALLINT,
    callbacktimelimit INT,
    missedcallbackaction INT,
    privatedata blob,
    active boolean,
    dateinactive DATETIME YEAR TO SECOND,
    dialertype SMALLINT default 0 not null,
    campaigntype SMALLINT default 1 not null
);

create table areacode (
    profileid INT,
    createdatetime DATETIME YEAR TO SECOND,
    recordid INT,
    areacode NVARCHAR(10),
    regioncode NVARCHAR(10),
    daylightsavingsenabled CHAR(1),
    gmtzone INT,
    privatedata blob,
    active boolean,
    dateinactive DATETIME YEAR TO SECOND
);

create table campaigncsqmap (
    recordid INT,
    campaignid INT,
    csqid INT,
    active SMALLINT,
    createdatetime DATETIME YEAR TO SECOND,
    dateinactive DATETIME YEAR TO SECOND
);

create table campaigndata (
    recordid INT not null,
    campaignid INT not null,
    startdate DATETIME YEAR TO FRACTION not null,
    enddate DATETIME YEAR TO FRACTION not null,
    attemptedcalls INT not null,
    abandonedcalls INT not null,
    voicecalls INT not null,
    linesperport DECIMAL(8,3) not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO FRACTION
);

create table configlog (
    logtime DATETIME YEAR TO SECOND default CURRENT YEAR TO SECOND not null,
    msg lvarchar not null
);

create table agentconnectiondetail (
    sessionid DECIMAL(18,0) not null,
    sessionseqnum SMALLINT not null,
    nodeid SMALLINT not null,
    profileid INT not null,
    resourceid INT not null,
    startdatetime DATETIME YEAR TO FRACTION not null,
    enddatetime DATETIME YEAR TO FRACTION not null,
    qindex SMALLINT not null,
    gmtoffset SMALLINT not null,
    ringtime SMALLINT,
    talktime SMALLINT,
    holdtime SMALLINT,
    worktime SMALLINT,
    callwrapupdata VARCHAR(40),
    callresult SMALLINT,
    dialinglistid INT
)
with CRCOLS;

create table agentstatedetail (
    agentid INT not null,
    eventdatetime DATETIME YEAR TO FRACTION not null,
    gmtoffset SMALLINT not null,
    eventtype SMALLINT not null,
    reasoncode SMALLINT default 0 not null,
    profileid INT not null
)
with CRCOLS;

create table contactcalldetail (
    sessionid DECIMAL(18,0) not null,
    sessionseqnum SMALLINT not null,
    nodeid SMALLINT not null,
    profileid INT not null,
    contacttype SMALLINT not null,
    contactdisposition SMALLINT not null,
    dispositionreason VARCHAR(100),
    originatortype SMALLINT not null,
    originatorid INT,
    originatordn NVARCHAR(30),
    destinationtype SMALLINT,
    destinationid INT,
    destinationdn NVARCHAR(30),
    startdatetime DATETIME YEAR TO FRACTION not null,
    enddatetime DATETIME YEAR TO FRACTION not null,
    gmtoffset SMALLINT not null,
    callednumber NVARCHAR(30),
    origcallednumber NVARCHAR(30),
    applicationtaskid DECIMAL(18,0),
    applicationid INT,
    applicationname NVARCHAR(30),
    connecttime SMALLINT,
    customvariable1 VARCHAR(40),
    customvariable2 VARCHAR(40),
    customvariable3 VARCHAR(40),
    customvariable4 VARCHAR(40),
    customvariable5 VARCHAR(40),
    customvariable6 VARCHAR(40),
    customvariable7 VARCHAR(40),
    customvariable8 VARCHAR(40),
    customvariable9 VARCHAR(40),
    customvariable10 VARCHAR(40),
    accountnumber VARCHAR(40),
    callerentereddigits VARCHAR(40),
    badcalltag CHAR(1),
    transfer boolean,
    redirect boolean,
    conference boolean,
    flowout boolean,
    metservicelevel boolean,
    campaignid INT,
    origprotocolcallref VARCHAR(32),
    destprotocolcallref VARCHAR(32),
    callresult SMALLINT,
    dialinglistid INT
)
with CRCOLS;

create table contactroutingdetail (
    sessionid DECIMAL(18,0) not null,
    sessionseqnum SMALLINT not null,
    nodeid SMALLINT not null,
    profileid INT not null,
    qindex SMALLINT not null,
    origpriority SMALLINT,
    finalpriority SMALLINT,
    queuetime SMALLINT,
    startdatetime DATETIME YEAR TO FRACTION not null
)
with CRCOLS;

create table contactqueuedetail (
    sessionid DECIMAL(18,0) not null,
    sessionseqnum SMALLINT not null,
    profileid INT not null,
    nodeid SMALLINT not null,
    targetid INT not null,
    targettype SMALLINT not null,
    qindex SMALLINT not null,
    queueorder SMALLINT not null,
    disposition SMALLINT,
    metservicelevel boolean,
    queuetime SMALLINT
)
with CRCOLS;

create table remotemonitoringdetail (
    sessionid DECIMAL(18) not null,
    startmonitoringreqtime DATETIME YEAR TO FRACTION not null,
    remoteloginid VARCHAR(50),
    rmonid INT not null,
    endmonitoringtime DATETIME YEAR TO FRACTION not null,
    origmonitoredid INT not null,
    origmonitoredidtype SMALLINT not null,
    cause SMALLINT,
    sessionseqnum SMALLINT not null,
    monitoredsessionid DECIMAL(18) not null,
    profileid INT not null,
    gmtoffset INT,
    nodeid SMALLINT not null
)
with CRCOLS;

create table monitoredresourcedetail (
    sessionid DECIMAL(18) not null,
    startmonitoringreqtime DATETIME YEAR TO FRACTION not null,
    startmonitoringcalltime DATETIME YEAR TO FRACTION not null,
    monitoredrsrcid INT not null,
    monitoredsessionseqnum SMALLINT not null,
    profileid INT not null,
    gmtoffset INT,
    nodeid SMALLINT not null
)
with CRCOLS;

create table crsproperties (
    propertyname lvarchar(256) not null,
    propertyvalue lvarchar not null
)
with CRCOLS;

create table latestsynchedtime (
    datesynched DATETIME YEAR TO FRACTION
)
with CRCOLS;

create table eememailstatusdescription (
    emailstatusid INT not null,
    emailstatusdescription NVARCHAR(20)
)
with CRCOLS;

create table eemreasoncodedescription (
    reasoncodeid INT not null,
    reasoncodedescription NVARCHAR(20)
)
with CRCOLS;

create table eemstatedescription (
    stateid INT not null,
    statedescription NVARCHAR(20)
)
with CRCOLS;

create table eemactiveemail (
    emailid SERIAL not null,
    emailuidonmailserver NVARCHAR(20),
    fromaddress lvarchar(320),
    toaddress lvarchar(320),
    emailsubject NVARCHAR(200),
    receiveddatetime DATETIME YEAR TO SECOND,
    receiveddatetimegmt DATETIME YEAR TO SECOND,
    eemqueueid INT,
    queueddatetime DATETIME YEAR TO SECOND,
    queueddatetimegmt DATETIME YEAR TO SECOND,
    draftuidonmailserver NVARCHAR(20),
    emailstatusfk INT,
    agent NVARCHAR(64),
    getdatetime DATETIME YEAR TO SECOND,
    getdatetimegmt DATETIME YEAR TO SECOND,
    inprocesstimeseconds INT
)
with CRCOLS;

create table eemcontactemaildetail (
    contactemaildetailid SERIAL not null,
    emailuidonmailserver NVARCHAR(20),
    fromaddress lvarchar(320),
    toaddress lvarchar(320),
    emailsubject NVARCHAR(200),
    eemqueueid INT,
    receiveddatetime DATETIME YEAR TO SECOND,
    receiveddatetimegmt DATETIME YEAR TO SECOND,
    receivedreasonfk INT,
    agent NVARCHAR(64),
    finaldispositiontypefk INT,
    finaldispositiondatetime DATETIME YEAR TO SECOND,
    finaldispositiondatetimegmt DATETIME YEAR TO SECOND,
    peerreviewuid NVARCHAR(20),
    peerreviewqueueid INT,
    normaluid NVARCHAR(20)
)
with CRCOLS;

create table eememailagentstatedetail (
    eememailagentstatedetailid SERIAL not null,
    emailuidonmailserver NVARCHAR(20),
    agent NVARCHAR(64),
    eventstartdatetime DATETIME YEAR TO SECOND,
    eventstartdatetimegmt DATETIME YEAR TO SECOND,
    eventenddatetime DATETIME YEAR TO SECOND,
    eventenddatetimegmt DATETIME YEAR TO SECOND,
    statefk INT,
    reasoncodefk INT,
    eemqueueid INT,
    emailstatusfk INT
)
with CRCOLS;

create table eemqueueagentdetail (
    queueagentdetailsequencingid SERIAL not null,
    contactemaildetailfk INT,
    eemqueueid INT,
    agent NVARCHAR(64),
    queuedatetime DATETIME YEAR TO SECOND,
    queuedatetimegmt DATETIME YEAR TO SECOND,
    getemaildatetime DATETIME YEAR TO SECOND,
    getemaildatetimegmt DATETIME YEAR TO SECOND,
    endemaildatetime DATETIME YEAR TO SECOND,
    endemaildatetimegmt DATETIME YEAR TO SECOND,
    receivedreasonfk INT,
    endtypefk INT,
    inprocesstimeseconds INT,
    wrapupdata NVARCHAR(40)
)
with CRCOLS;

create table eemtablesversion (
    version INT not null,
    updatedate DATETIME YEAR TO SECOND not null
)
with CRCOLS;

create table chattriggerpoint (
    csqid INT not null,
    chattriggerpointname lvarchar(256) not null,
    active boolean not null,
    dateinactive DATETIME YEAR TO FRACTION
);

create table chatuserform (
    wdid INT not null,
    fieldname NVARCHAR(50) not null,
    fieldid INT not null,
    fieldorder SMALLINT not null,
    active boolean not null,
    lastmodifieddate DATETIME YEAR TO FRACTION
);

create table chatproblemstatement (
    wdid INT not null,
    tagid NVARCHAR(50) not null,
    problemstmt lvarchar(256) not null,
    psorder INT not null
);

create table licenseutilizationdetail (
    timestamp DATETIME YEAR TO FRACTION not null,
    inboundportsinuse INT not null,
    outboundportsinuse INT not null,
    inboundseatsinuse INT not null
)
with CRCOLS;

create table textagentconnectiondetail (
    contactid VARCHAR(64) not null,
    contactseqnum SMALLINT not null,
    nodeid SMALLINT not null,
    resourceid INT not null,
    startdatetime DATETIME YEAR TO FRACTION not null,
    enddatetime DATETIME YEAR TO FRACTION not null,
    qindex SMALLINT default 0 not null,
    accepttime SMALLINT default 0,
    talktime INT default 0,
    worktime SMALLINT default 0,
    wrapupdata VARCHAR(40)
)
with CRCOLS;

create table textagentstatedetail (
    agentid INT not null,
    statechangedatetime DATETIME YEAR TO FRACTION not null,
    agentstateid SMALLINT not null,
    reasoncode SMALLINT default 0 not null,
    routingtype SMALLINT not null
)
with CRCOLS;

create table textcontactdetail (
    contactid VARCHAR(64) not null,
    contactseqnum SMALLINT not null,
    nodeid SMALLINT not null,
    contacttype SMALLINT not null,
    mediatype SMALLINT not null,
    contactdisposition SMALLINT not null,
    dispositionreason VARCHAR(100),
    originatortype SMALLINT not null,
    originator NVARCHAR(50),
    destinationtype SMALLINT not null,
    destination NVARCHAR(50),
    startdatetime DATETIME YEAR TO FRACTION not null,
    enddatetime DATETIME YEAR TO FRACTION not null,
    tagid NVARCHAR(50)
)
with CRCOLS;

create table resource (
    resourceid INT not null,
    profileid INT not null,
    resourceloginid NVARCHAR(50) not null,
    resourcename NVARCHAR(50) not null,
    resourcegroupid INT,
    resourcetype SMALLINT not null,
    active boolean not null,
    autoavail boolean not null,
    extension NVARCHAR(50) not null,
    orderinrg INT,
    dateinactive DATETIME YEAR TO FRACTION,
    resourceskillmapid INT not null,
    assignedteamid INT not null,
    resourcefirstname NVARCHAR(50) not null,
    resourcelastname NVARCHAR(50) not null,
    resourcealias NVARCHAR(50)
);

create table chatwidget (
    wdid INT not null,
    wdname NVARCHAR(50) not null,
    wddescription lvarchar(256),
    wdcode blob,
    wdwelcome lvarchar(256),
    wdlogo lvarchar(256),
    wderror lvarchar(256),
    wdjointimeout lvarchar(256),
    active boolean not null,
    lastmodifieddate DATETIME YEAR TO FRACTION
);

create table channelprovider (
    id INT not null,
    channeltype VARCHAR(20) not null,
    sendserverfqdn VARCHAR(255) not null,
    sendserverport INT not null,
    sendprotocol VARCHAR(20) not null,
    receiveserverfqdn VARCHAR(255) not null,
    receiveserverport INT not null,
    receiveprotocol VARCHAR(20) not null,
    description lvarchar(400),
    active boolean not null,
    dateinactive DATETIME YEAR TO SECOND
);

create table mediacustomerdatamapping (
    recordid INT not null,
    mediatype VARCHAR(30) not null,
    fieldname VARCHAR(50) not null,
    columnid INT not null
);

create table contactservicequeue (
    contactservicequeueid INT not null,
    profileid INT not null,
    csqname NVARCHAR(50) not null,
    resourcepooltype SMALLINT not null,
    resourcegroupid INT,
    selectioncriteria NVARCHAR(30) not null,
    skillgroupid INT,
    servicelevel INT not null,
    servicelevelpercentage SMALLINT not null,
    active boolean not null,
    autowork boolean not null,
    dateinactive DATETIME YEAR TO FRACTION,
    queuealgorithm NVARCHAR(30) not null,
    recordid INT not null,
    orderlist INT,
    wrapuptime SMALLINT,
    prompt lvarchar(256) not null,
    privatedata blob,
    queuetype SMALLINT not null,
    queuetypename NVARCHAR(30),
    accountuserid NVARCHAR(254),
    accountpassword NVARCHAR(255),
    channelproviderid INT default -1,
    reviewqueueid INT default -1,
    routingtype NVARCHAR(30),
    foldername NVARCHAR(255),
    pollinginterval INT default -1,
    snapshotage INT default -1,
    feedid NVARCHAR(30)
);

create table textcustomerdetails (
    contactid VARCHAR(64) not null,
    fieldid1 INT not null,
    fieldvalue1 lvarchar(600) not null,
    fieldid2 INT not null,
    fieldvalue2 lvarchar(600) not null,
    fieldid3 INT not null,
    fieldvalue3 lvarchar(600) not null,
    fieldid4 INT not null,
    fieldvalue4 lvarchar(600) not null,
    fieldid5 INT not null,
    fieldvalue5 lvarchar(600) not null,
    fieldid6 INT not null,
    fieldvalue6 lvarchar(600) not null,
    fieldid7 INT not null,
    fieldvalue7 lvarchar(600) not null,
    fieldid8 INT not null,
    fieldvalue8 lvarchar(600) not null,
    fieldid9 INT not null,
    fieldvalue9 lvarchar(600) not null,
    fieldid10 INT not null,
    fieldvalue10 lvarchar(600) not null,
    insertiondate DATETIME YEAR TO FRACTION not null
)
with CRCOLS;

create table dialinglist (
    recordid INT,
    dialinglistid INT,
    profileid INT,
    campaignid INT,
    createdatetime DATETIME YEAR TO SECOND,
    accountnumber NVARCHAR(25),
    firstname NVARCHAR(50),
    lastname NVARCHAR(50),
    phone01 VARCHAR(28),
    phone02 VARCHAR(28),
    phone03 VARCHAR(28),
    gmtzonephone01 SMALLINT,
    dstphone01 SMALLINT,
    gmtzonephone02 SMALLINT,
    dstphone02 SMALLINT,
    gmtzonephone03 SMALLINT,
    dstphone03 SMALLINT,
    callbacknumber VARCHAR(28),
    callbackdatetime DATETIME YEAR TO SECOND,
    callstatus SMALLINT,
    callresult SMALLINT,
    callresult01 SMALLINT,
    callresult02 SMALLINT,
    callresult03 SMALLINT,
    lastnumberdialed SMALLINT,
    callsmadetophone01 SMALLINT,
    callsmadetophone02 SMALLINT,
    callsmadetophone03 SMALLINT,
    callsmadetocallbacknum SMALLINT,
    retry boolean,
    active boolean,
    dateinactive DATETIME YEAR TO SECOND,
    nummissedcallback SMALLINT
);

create table dialinglisthistory (
    recordid INT,
    dialinglistid INT,
    profileid INT,
    campaignid INT,
    createdatetime DATETIME YEAR TO SECOND,
    accountnumber NVARCHAR(25),
    firstname NVARCHAR(50),
    lastname NVARCHAR(50),
    phone01 VARCHAR(28),
    phone02 VARCHAR(28),
    phone03 VARCHAR(28),
    gmtzonephone01 SMALLINT,
    dstphone01 SMALLINT,
    gmtzonephone02 SMALLINT,
    dstphone02 SMALLINT,
    gmtzonephone03 SMALLINT,
    dstphone03 SMALLINT,
    callbacknumber VARCHAR(28),
    callbackdatetime DATETIME YEAR TO SECOND,
    callstatus SMALLINT,
    callresult SMALLINT,
    callresult01 SMALLINT,
    callresult02 SMALLINT,
    callresult03 SMALLINT,
    lastnumberdialed SMALLINT,
    callsmadetophone01 SMALLINT,
    callsmadetophone02 SMALLINT,
    callsmadetophone03 SMALLINT,
    callsmadetocallbacknum SMALLINT,
    retry boolean,
    active boolean,
    dateinactive DATETIME YEAR TO SECOND,
    nummissedcallback SMALLINT
)
with CRCOLS;

create table textcontactqueuedetail (
    contactid VARCHAR(64) not null,
    contactseqnum SMALLINT not null,
    nodeid SMALLINT not null,
    csqrecordid INT not null,
    qindex SMALLINT not null,
    disposition SMALLINT,
    metservicelevel boolean,
    queuetime INT
)
with CRCOLS;

alter table resourcegroup add constraint primary key 
	(resourcegroupid, profileid)
	constraint pk_resourcegroup;

alter table resourceskillmapping add constraint primary key 
	(resourceskillmapid, skillid, profileid)
	constraint pk_resourceskillmapping;

alter table skill add constraint primary key 
	(skillid, profileid)
	constraint pk_skill;

alter table skillgroup add constraint primary key 
	(skillgroupid, skillid, profileid)
	constraint pk_skillgroup;

alter table team add constraint primary key 
	(teamid, profileid)
	constraint pk_team;

alter table application add constraint primary key 
	(applicationid, profileid)
	constraint pk_application;

alter table agentroutingsetting add constraint primary key 
	(profileid)
	constraint pk_agentroutingsetting;

alter table historicalusers add constraint primary key 
	(userid, productid)
	constraint pk_historicalusers;

alter table productinfo add constraint primary key 
	(productid, timestamp)
	constraint pk_productinfo;

alter table profileidmapping add constraint primary key 
	(profilename)
	constraint pk_profileidmapping;

alter table purgeconfig add constraint primary key 
	(id)
	constraint u113_76;

alter table supervisor add constraint primary key 
	(recordid, profileid)
	constraint pk_supervisor;

alter table teamcsqmapping add constraint primary key 
	(recordid, profileid)
	constraint pk_teamcsqmapping;

alter table rmoncsqconfig add constraint primary key 
	(rmonid, contactservicequeueid, profileid)
	constraint pk_rmoncsqconfig;

alter table rmonresconfig add constraint primary key 
	(rmonid, resourceloginid, profileid)
	constraint pk_rmonresconfig;

alter table rmonuser add constraint primary key 
	(rmonid, profileid)
	constraint u127_103;

alter table crsapplication add constraint primary key 
	(recordid, profileid)
	constraint pk_crsapplication;

alter table crstrigger add constraint primary key 
	(recordid, profileid)
	constraint pk_crstrigger;

alter table crsgroup add constraint primary key 
	(recordid, profileid)
	constraint pk_crsgroup;

alter table systemconfig add constraint primary key 
	(recordid)
	constraint pk_systemconfig;

alter table systemconfigcolumn add constraint primary key 
	(recordid, columnindex)
	constraint pk_systemconfigcolumn;

alter table configschema add constraint primary key 
	(configclassid)
	constraint pk_configschema;

alter table configschemacolumn add constraint primary key 
	(configclassid, columnindex)
	constraint pk_configschemacolumn;

alter table workflowtask add constraint primary key 
	(taskid, applicationserverid)
	constraint pk__workflowtask;

alter table rtcsqssummary add constraint primary key 
	(csqname)
	constraint pk_rtcsqssummary;

alter table rticdstatistics add constraint primary key 
	(type)
	constraint pk_rticdstatistics;

alter table crsuser add constraint primary key 
	(profileid, resourceid)
	constraint pk_crsuser;

alter table spokenname add constraint primary key 
	(recordid, profileid)
	constraint pk_spokenname;

alter table campaign add constraint primary key 
	(campaignid, profileid, recordid)
	constraint pk_campaign;

alter table areacode add constraint primary key 
	(recordid, areacode, profileid)
	constraint pk_areacode;

alter table campaigncsqmap add constraint primary key 
	(campaignid, csqid, recordid)
	constraint pk_campaigncsqmap;

alter table campaigndata add constraint primary key 
	(recordid, campaignid)
	constraint pk_campaigndata;

alter table agentconnectiondetail add constraint primary key 
	(sessionid, sessionseqnum, nodeid, resourceid, qindex, profileid, startdatetime)
	constraint pk_agentconnectiondetail;

alter table agentstatedetail add constraint primary key 
	(agentid, eventdatetime, eventtype, reasoncode, profileid)
	constraint pk_agentstatusdetail;

alter table contactcalldetail add constraint primary key 
	(sessionid, sessionseqnum, nodeid, profileid)
	constraint pk_contactcalldetail;

alter table contactroutingdetail add constraint primary key 
	(sessionid, sessionseqnum, nodeid, profileid, qindex)
	constraint pk_contactroutingdetail;

alter table contactqueuedetail add constraint primary key 
	(sessionid, sessionseqnum, nodeid, profileid, qindex, targetid, targettype)
	constraint pk_contactqueuedetail;

alter table remotemonitoringdetail add constraint primary key 
	(nodeid, profileid, sessionid, startmonitoringreqtime)
	constraint pk_remotemonitoringdetail;

alter table monitoredresourcedetail add constraint primary key 
	(nodeid, profileid, sessionid, startmonitoringcalltime)
	constraint pk_monitoredresourcedetail;

alter table crsproperties add constraint primary key 
	(propertyname)
	constraint pk_crsproperties;

alter table latestsynchedtime add constraint primary key 
	(datesynched)
	constraint pk_latestsynchedtime;

alter table eememailstatusdescription add constraint primary key 
	(emailstatusid)
	constraint u159_273;

alter table eemreasoncodedescription add constraint primary key 
	(reasoncodeid)
	constraint u160_275;

alter table eemstatedescription add constraint primary key 
	(stateid)
	constraint u161_277;

alter table eemactiveemail add constraint primary key 
	(emailid)
	constraint u162_279;

alter table eemcontactemaildetail add constraint primary key 
	(contactemaildetailid)
	constraint u163_282;

alter table eememailagentstatedetail add constraint primary key 
	(eememailagentstatedetailid)
	constraint u164_284;

alter table eemqueueagentdetail add constraint primary key 
	(queueagentdetailsequencingid)
	constraint u165_287;

alter table chattriggerpoint add constraint primary key 
	(csqid)
	constraint pk_chattriggerpoint;

alter table chatuserform add constraint primary key 
	(wdid, fieldid)
	constraint pk_chatuserform;

alter table chatproblemstatement add constraint primary key 
	(wdid, psorder)
	constraint pk_chatproblemstatement;

alter table licenseutilizationdetail add constraint primary key 
	(timestamp)
	constraint pk_licenseutilizationdetail;

alter table textagentconnectiondetail add constraint primary key 
	(contactid, contactseqnum, resourceid, startdatetime)
	constraint pk_textagentconnectiondetail;

alter table textagentstatedetail add constraint primary key 
	(agentid, statechangedatetime, agentstateid, reasoncode, routingtype)
	constraint pk_textagentstatusdetail;

alter table textcontactdetail add constraint primary key 
	(contactid, contactseqnum)
	constraint pk_textcontactdetail;

alter table resource add constraint primary key 
	(resourceid, profileid)
	constraint pk_resource;

alter table chatwidget add constraint primary key 
	(wdid)
	constraint pk_chatwidget;

alter table channelprovider add constraint primary key 
	(id)
	constraint pk_channelprovider;

alter table mediacustomerdatamapping add constraint primary key 
	(recordid, mediatype)
	constraint pk_mediacustomerdatamapping;

alter table contactservicequeue add constraint primary key 
	(recordid)
	constraint pk_contactservicequeue;

alter table textcustomerdetails add constraint primary key 
	(contactid, fieldid1, fieldid2, fieldid3, fieldid4, fieldid5, fieldid6, fieldid7, fieldid8, fieldid9, fieldid10)
	constraint pk_textcustomerdetails;

alter table dialinglist add constraint primary key 
	(dialinglistid, profileid, recordid)
	constraint pk_dialinglist;

alter table dialinglisthistory add constraint primary key 
	(dialinglistid, profileid, recordid)
	constraint pk_dialinglisthistory;

alter table textcontactqueuedetail add constraint primary key 
	(contactid, contactseqnum, csqrecordid, qindex)
	constraint pk_textcontactqueuedetail;

alter table systemconfigcolumn add constraint foreign key 
	(recordid)
	references systemconfig
	(recordid) 
	on delete cascade 
	constraint r133_162;

alter table configschemacolumn add constraint foreign key 
	(configclassid)
	references configschema
	(configclassid) 
	on delete cascade 
	constraint r135_172;

alter table eemactiveemail add constraint foreign key 
	(emailstatusfk)
	references eememailstatusdescription
	(emailstatusid) 
	constraint r162_280;

alter table eememailagentstatedetail add constraint foreign key 
	(statefk)
	references eemstatedescription
	(stateid) 
	constraint r164_285;

alter table eemqueueagentdetail add constraint foreign key 
	(contactemaildetailfk)
	references eemcontactemaildetail
	(contactemaildetailid) 
	constraint r165_288;

alter table eemqueueagentdetail add constraint foreign key 
	(endtypefk)
	references eememailstatusdescription
	(emailstatusid) 
	constraint r165_289;

